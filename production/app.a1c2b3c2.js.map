{"version":3,"sources":["js/app.js"],"names":["budgetController","Expense","id","description","value","percentage","prototype","calcPercentage","totalIncome","Math","round","getPercentage","Income","calculateTotal","type","sum","data","allItems","forEach","cur","totals","exp","inc","budget","addItem","des","val","newItem","ID","length","push","deleteItem","ids","index","map","current","indexOf","splice","calculateBudget","calculatePercentages","getPercentages","allPerc","getBudget","totalInc","totalExp","testing","console","log","UIController","DOMstrings","inputType","inputDescription","inputValue","inputBtn","incomeContainer","expensesContainer","budgetLabel","incomeLabel","expensesLabel","percentageLabel","container","expensesPercLabel","dateLabel","formatNumber","num","numSplit","int","abs","toFixed","split","substr","nodeListForEach","list","callback","i","getInput","document","querySelector","parseFloat","addListItem","obj","html","newHtml","element","replace","insertAdjacentHTML","deleteListItem","selectorID","el","getElementById","parentNode","removeChild","clearFields","fields","fieldsArr","querySelectorAll","Array","slice","call","array","focus","displayBudget","textContent","displayPercentages","percentages","displayMonth","now","months","month","year","Date","getMonth","getFullYear","changedType","classList","toggle","getDOMstrings","controller","budgetCtrl","UICtrl","setupEventListeners","updateBudget","updatePercentages","ctrlAddItem","input","isNaN","ctrlDeleteItem","event","itemID","splitID","target","parseInt","init","DOM","addEventListener","keyCode","which"],"mappings":"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","file":"app.a1c2b3c2.js","sourceRoot":"..\\src","sourcesContent":["// BUDGET CONTROLLER\r\nvar budgetController = (function () {\r\n\r\n    var Expense = function (id, description, value) {\r\n        this.id = id;\r\n        this.description = description;\r\n        this.value = value;\r\n        this.percentage = -1;\r\n    };\r\n\r\n\r\n    Expense.prototype.calcPercentage = function (totalIncome) {\r\n        if (totalIncome > 0) {\r\n            this.percentage = Math.round((this.value / totalIncome) * 100);\r\n        } else {\r\n            this.percentage = -1;\r\n        }\r\n    };\r\n\r\n\r\n    Expense.prototype.getPercentage = function () {\r\n        return this.percentage;\r\n    };\r\n\r\n\r\n    var Income = function (id, description, value) {\r\n        this.id = id;\r\n        this.description = description;\r\n        this.value = value;\r\n    };\r\n\r\n\r\n    var calculateTotal = function (type) {\r\n        var sum = 0;\r\n        data.allItems[type].forEach(function (cur) {\r\n            sum += cur.value;\r\n        });\r\n        data.totals[type] = sum;\r\n    };\r\n\r\n\r\n    var data = {\r\n        allItems: {\r\n            exp: [],\r\n            inc: []\r\n        },\r\n        totals: {\r\n            exp: 0,\r\n            inc: 0\r\n        },\r\n        budget: 0,\r\n        percentage: -1\r\n    };\r\n\r\n\r\n    return {\r\n        addItem: function (type, des, val) {\r\n            var newItem, ID;\r\n\r\n            //[1 2 3 4 5], next ID = 6\r\n            //[1 2 4 6 8], next ID = 9\r\n            // ID = last ID + 1\r\n\r\n            // Create new ID\r\n            if (data.allItems[type].length > 0) {\r\n                ID = data.allItems[type][data.allItems[type].length - 1].id + 1;\r\n            } else {\r\n                ID = 0;\r\n            }\r\n\r\n            // Create new item based on 'inc' or 'exp' type\r\n            if (type === 'exp') {\r\n                newItem = new Expense(ID, des, val);\r\n            } else if (type === 'inc') {\r\n                newItem = new Income(ID, des, val);\r\n            }\r\n\r\n            // Push it into our data structure\r\n            data.allItems[type].push(newItem);\r\n\r\n            // Return the new element\r\n            return newItem;\r\n        },\r\n\r\n\r\n        deleteItem: function (type, id) {\r\n            var ids, index;\r\n\r\n            // id = 6\r\n            //data.allItems[type][id];\r\n            // ids = [1 2 4  8]\r\n            //index = 3\r\n\r\n            ids = data.allItems[type].map(function (current) {\r\n                return current.id;\r\n            });\r\n\r\n            index = ids.indexOf(id);\r\n\r\n            if (index !== -1) {\r\n                data.allItems[type].splice(index, 1);\r\n            }\r\n\r\n        },\r\n\r\n\r\n        calculateBudget: function () {\r\n\r\n            // calculate total income and expenses\r\n            calculateTotal('exp');\r\n            calculateTotal('inc');\r\n\r\n            // Calculate the budget: income - expenses\r\n            data.budget = data.totals.inc - data.totals.exp;\r\n\r\n            // calculate the percentage of income that we spent\r\n            if (data.totals.inc > 0) {\r\n                data.percentage = Math.round((data.totals.exp / data.totals.inc) * 100);\r\n            } else {\r\n                data.percentage = -1;\r\n            }\r\n\r\n            // Expense = 100 and income 300, spent 33.333% = 100/300 = 0.3333 * 100\r\n        },\r\n\r\n        calculatePercentages: function () {\r\n\r\n            /*\r\n            a=20\r\n            b=10\r\n            c=40\r\n            income = 100\r\n            a=20/100=20%\r\n            b=10/100=10%\r\n            c=40/100=40%\r\n            */\r\n\r\n            data.allItems.exp.forEach(function (cur) {\r\n                cur.calcPercentage(data.totals.inc);\r\n            });\r\n        },\r\n\r\n\r\n        getPercentages: function () {\r\n            var allPerc = data.allItems.exp.map(function (cur) {\r\n                return cur.getPercentage();\r\n            });\r\n            return allPerc;\r\n        },\r\n\r\n\r\n        getBudget: function () {\r\n            return {\r\n                budget: data.budget,\r\n                totalInc: data.totals.inc,\r\n                totalExp: data.totals.exp,\r\n                percentage: data.percentage\r\n            };\r\n        },\r\n\r\n        testing: function () {\r\n            console.log(data);\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n\r\n\r\n// UI CONTROLLER\r\nvar UIController = (function () {\r\n\r\n    var DOMstrings = {\r\n        inputType: '.add__type',\r\n        inputDescription: '.add__description',\r\n        inputValue: '.add__value',\r\n        inputBtn: '.add__btn',\r\n        incomeContainer: '.income__list',\r\n        expensesContainer: '.expenses__list',\r\n        budgetLabel: '.budget__value',\r\n        incomeLabel: '.budget__income--value',\r\n        expensesLabel: '.budget__expenses--value',\r\n        percentageLabel: '.budget__expenses--percentage',\r\n        container: '.container',\r\n        expensesPercLabel: '.item__percentage',\r\n        dateLabel: '.budget__title--month'\r\n    };\r\n\r\n\r\n    var formatNumber = function (num, type) {\r\n        var numSplit, int, dec, type;\r\n        /*\r\n            + or - before number\r\n            exactly 2 decimal points\r\n            comma separating the thousands\r\n  \r\n            2310.4567 -> + 2,310.46\r\n            2000 -> + 2,000.00\r\n            */\r\n\r\n        num = Math.abs(num);\r\n        num = num.toFixed(2);\r\n\r\n        numSplit = num.split('.');\r\n\r\n        int = numSplit[0];\r\n        if (int.length > 3) {\r\n            int = int.substr(0, int.length - 3) + ',' + int.substr(int.length - 3, 3); //input 23510, output 23,510\r\n        }\r\n\r\n        dec = numSplit[1];\r\n\r\n        return (type === 'exp' ? '-' : '+') + ' ' + int + '.' + dec;\r\n\r\n    };\r\n\r\n\r\n    var nodeListForEach = function (list, callback) {\r\n        for (var i = 0; i < list.length; i++) {\r\n            callback(list[i], i);\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        getInput: function () {\r\n            return {\r\n                type: document.querySelector(DOMstrings.inputType).value, // Will be either inc or exp\r\n                description: document.querySelector(DOMstrings.inputDescription).value,\r\n                value: parseFloat(document.querySelector(DOMstrings.inputValue).value)\r\n            };\r\n        },\r\n\r\n\r\n        addListItem: function (obj, type) {\r\n            var html, newHtml, element;\r\n            // Create HTML string with placeholder text\r\n\r\n            if (type === 'inc') {\r\n                element = DOMstrings.incomeContainer;\r\n\r\n                html = '<div class=\"item clearfix\" id=\"inc-%id%\"> <div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\r\n            } else if (type === 'exp') {\r\n                element = DOMstrings.expensesContainer;\r\n\r\n                html = '<div class=\"item clearfix\" id=\"exp-%id%\"><div class=\"item__description\">%description%</div><div class=\"right clearfix\"><div class=\"item__value\">%value%</div><div class=\"item__percentage\">21%</div><div class=\"item__delete\"><button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button></div></div></div>';\r\n            }\r\n\r\n            // Replace the placeholder text with some actual data\r\n            newHtml = html.replace('%id%', obj.id);\r\n            newHtml = newHtml.replace('%description%', obj.description);\r\n            newHtml = newHtml.replace('%value%', formatNumber(obj.value, type));\r\n\r\n            // Insert the HTML into the DOM\r\n            document.querySelector(element).insertAdjacentHTML('beforeend', newHtml);\r\n        },\r\n\r\n\r\n        deleteListItem: function (selectorID) {\r\n\r\n            var el = document.getElementById(selectorID);\r\n            el.parentNode.removeChild(el);\r\n\r\n        },\r\n\r\n\r\n        clearFields: function () {\r\n            var fields, fieldsArr;\r\n\r\n            fields = document.querySelectorAll(DOMstrings.inputDescription + ', ' + DOMstrings.inputValue);\r\n\r\n            fieldsArr = Array.prototype.slice.call(fields);\r\n\r\n            fieldsArr.forEach(function (current, index, array) {\r\n                current.value = \"\";\r\n            });\r\n\r\n            fieldsArr[0].focus();\r\n        },\r\n\r\n\r\n        displayBudget: function (obj) {\r\n            var type;\r\n            obj.budget > 0 ? type = 'inc' : type = 'exp';\r\n\r\n            document.querySelector(DOMstrings.budgetLabel).textContent = formatNumber(obj.budget, type);\r\n            document.querySelector(DOMstrings.incomeLabel).textContent = formatNumber(obj.totalInc, 'inc');\r\n            document.querySelector(DOMstrings.expensesLabel).textContent = formatNumber(obj.totalExp, 'exp');\r\n\r\n            if (obj.percentage > 0) {\r\n                document.querySelector(DOMstrings.percentageLabel).textContent = obj.percentage + '%';\r\n            } else {\r\n                document.querySelector(DOMstrings.percentageLabel).textContent = '---';\r\n            }\r\n\r\n        },\r\n\r\n\r\n        displayPercentages: function (percentages) {\r\n\r\n            var fields = document.querySelectorAll(DOMstrings.expensesPercLabel);\r\n\r\n            nodeListForEach(fields, function (current, index) {\r\n\r\n                if (percentages[index] > 0) {\r\n                    current.textContent = percentages[index] + '%';\r\n                } else {\r\n                    current.textContent = '---';\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n\r\n        displayMonth: function () {\r\n            var now, months, month, year;\r\n\r\n            now = new Date();\r\n            //var christmas = new Date(2016, 11, 25);\r\n\r\n            months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n            month = now.getMonth();\r\n\r\n            year = now.getFullYear();\r\n            document.querySelector(DOMstrings.dateLabel).textContent = months[month] + ' ' + year;\r\n        },\r\n\r\n\r\n        changedType: function () {\r\n\r\n            var fields = document.querySelectorAll(\r\n                DOMstrings.inputType + ',' +\r\n                DOMstrings.inputDescription + ',' +\r\n                DOMstrings.inputValue);\r\n\r\n            nodeListForEach(fields, function (cur) {\r\n                cur.classList.toggle('red-focus');\r\n            });\r\n\r\n            document.querySelector(DOMstrings.inputBtn).classList.toggle('red');\r\n\r\n        },\r\n\r\n\r\n        getDOMstrings: function () {\r\n            return DOMstrings;\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n\r\n\r\n// GLOBAL APP CONTROLLER\r\nvar controller = (function (budgetCtrl, UICtrl) {\r\n\r\n    var setupEventListeners = function () {\r\n        var DOM = UICtrl.getDOMstrings();\r\n\r\n        document.querySelector(DOM.inputBtn).addEventListener('click', ctrlAddItem);\r\n\r\n        document.addEventListener('keypress', function (event) {\r\n            if (event.keyCode === 13 || event.which === 13) {\r\n                ctrlAddItem();\r\n            }\r\n        });\r\n\r\n        document.querySelector(DOM.container).addEventListener('click', ctrlDeleteItem);\r\n\r\n        document.querySelector(DOM.inputType).addEventListener('change', UICtrl.changedType);\r\n    };\r\n\r\n\r\n    var updateBudget = function () {\r\n\r\n        // 1. Calculate the budget\r\n        budgetCtrl.calculateBudget();\r\n\r\n        // 2. Return the budget\r\n        var budget = budgetCtrl.getBudget();\r\n\r\n        // 3. Display the budget on the UI\r\n        UICtrl.displayBudget(budget);\r\n    };\r\n\r\n\r\n    var updatePercentages = function () {\r\n\r\n        // 1. Calculate percentages\r\n        budgetCtrl.calculatePercentages();\r\n\r\n        // 2. Read percentages from the budget controller\r\n        var percentages = budgetCtrl.getPercentages();\r\n\r\n        // 3. Update the UI with the new percentages\r\n        UICtrl.displayPercentages(percentages);\r\n    };\r\n\r\n\r\n    var ctrlAddItem = function () {\r\n        var input, newItem;\r\n\r\n        // 1. Get the field input data\r\n        input = UICtrl.getInput();\r\n\r\n        if (input.description !== \"\" && !isNaN(input.value) && input.value > 0) {\r\n            // 2. Add the item to the budget controller\r\n            newItem = budgetCtrl.addItem(input.type, input.description, input.value);\r\n\r\n            // 3. Add the item to the UI\r\n            UICtrl.addListItem(newItem, input.type);\r\n\r\n            // 4. Clear the fields\r\n            UICtrl.clearFields();\r\n\r\n            // 5. Calculate and update budget\r\n            updateBudget();\r\n\r\n            // 6. Calculate and update percentages\r\n            updatePercentages();\r\n        }\r\n    };\r\n\r\n\r\n    var ctrlDeleteItem = function (event) {\r\n        var itemID, splitID, type, ID;\r\n\r\n        itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;\r\n\r\n        if (itemID) {\r\n\r\n            //inc-1\r\n            splitID = itemID.split('-');\r\n            type = splitID[0];\r\n            ID = parseInt(splitID[1]);\r\n\r\n            // 1. delete the item from the data structure\r\n            budgetCtrl.deleteItem(type, ID);\r\n\r\n            // 2. Delete the item from the UI\r\n            UICtrl.deleteListItem(itemID);\r\n\r\n            // 3. Update and show the new budget\r\n            updateBudget();\r\n\r\n            // 4. Calculate and update percentages\r\n            updatePercentages();\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        init: function () {\r\n            console.log('Application has started.');\r\n            UICtrl.displayMonth();\r\n            UICtrl.displayBudget({\r\n                budget: 0,\r\n                totalInc: 0,\r\n                totalExp: 0,\r\n                percentage: -1\r\n            });\r\n            setupEventListeners();\r\n        }\r\n    };\r\n\r\n})(budgetController, UIController);\r\n\r\n\r\ncontroller.init();"]}